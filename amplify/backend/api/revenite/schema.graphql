type SocketCheck @model @key(name: "byHealthCheck", fields: ["healthcheckID"]) @key(name: "byAmputation", fields: ["amputationID"]) @auth(rules: [{allow: owner}]) {
  id: ID!
  healthcheckID: ID
  socketComfortScore: String!
  blistered: Boolean
  bleeding: Boolean
  bruised: Boolean
  hot: Boolean
  painful: Boolean
  red: Boolean
  sore: Boolean
  sweaty: Boolean
  loose: Boolean
  tight: Boolean
  amputationID: ID
}

type HealthCheck @model @auth(rules: [{allow: owner}]) {
  id: ID!
  bodyScore: String!
  aching: Boolean
  painful: Boolean
  sore: Boolean
  tight: Boolean
  tired: Boolean
  other: Boolean
  details: String
  otherComments: String
  SocketChecks: [SocketCheck] @connection(keyName: "byHealthCheck", fields: ["id"])
  date: AWSDateTime!
}

enum AmputationLevelEnum {
  THROUGH_FOOT
  TRANSTIBIAL
  THROUGH_KNEE
  TRANSFEMORAL
  THROUGH_HAND
  TRANSRADIAL
  THROUGH_ELBOW
  TRANSHUMERAL
}

enum AmputationEnum {
  LEFT_LEG
  RIGHT_LEG
  LEFT_ARM
  RIGHT_ARM
}

type Amputation @model @auth(rules: [{allow: owner}]) {
  id: ID!
  limb: AmputationEnum
  level: AmputationLevelEnum
  prosthesisWorn: Boolean
  SocketChecks: [SocketCheck] @connection(keyName: "byAmputation", fields: ["id"])
  scarring: Boolean
  grafting: Boolean
}

type User @model @auth(rules: [{allow: owner}]) {
  id: ID!
  name: String
  display_name: String
  dateOfBirth: String
  gender: String
  weight: String
  height: String
  sex: String
  ethnicGroup: String
  ethnicIdentity: String
  ethnicIdentityOther: String
  hasMilitaryService: String
  militaryService: String
  militaryServiceOther: String
}

type Activity @model @auth(rules: [{allow: owner}]) {
  id: ID!
  name: String
  date: AWSDate!
  duration: String!
  distance: String!
  cardio: Boolean
  flexibility: Boolean
  strength: Boolean
  perceivedExertion: String!
  feeling: String!
  activity: String
}
 